#include <iostream>
using namespace std;

class node {
public:
    int data;
    node* next;
};

void inserts(node** head, int data) {
    node* n = new node();
    n->data = data;
    n->next = *head;
    *head = n;
}

void deleteatpos(node* head, int position) {
    node* temp = head;
    for (int i = 1; temp != nullptr && i < position - 1; i++) {
        temp = temp->next;
    }
    if (temp == nullptr || temp->next == nullptr) {
        cout << "Position not found" << endl;
    } else {
        node* newnode = temp->next;
        temp->next = newnode->next;
        delete newnode;
    }
}

void insertatpos(node* head, int position1, int value) {
    node* t = head;
    for (int i = 1; t != nullptr && i < position1 - 1; i++) {
        t = t->next;
    }
    if (t == nullptr || t->next == nullptr) {
        cout << "Position not found" << endl;
    } else {
        node* newnode = new node();
        newnode->data = value;
        newnode->next = t->next;
        t->next = newnode;
    }
}

void print(node* head) {
    cout << "Original list:" << endl;
    node* current = head;
    while (current != nullptr) {
        cout << current->data << endl;
        current = current->next;
    }
}

int main() {
    int numElements, position, value, position1;
    node* head = nullptr;

    cout << "Enter the number of elements: ";
    cin >> numElements;

    cout << "Enter the elements of the linked list: " << endl;
    for (int i = 0; i < numElements; i++) {
        int data;
        cin >> data;
        inserts(&head, data);
    }

    print(head);

    cout << "Enter the position to delete: ";
    cin >> position;
    deleteatpos(head, position);
    print(head);

    cout << "Enter the position to insert: ";
    cin >> position1;
    cout << "Enter the value to insert: ";
    cin >> value;
    insertatpos(head, position1, value);
    print(head);

    return 0;
}
